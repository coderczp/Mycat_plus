<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
  http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
  http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

	<mvc:annotation-driven />

	<context:component-scan base-package="io.mycat.web" />

	<context:property-placeholder ignore-unresolvable="false"
		location="classpath*:spring/config/${spring.profiles.active}.properties" />

	<mvc:resources mapping="res/**" location="res/" />

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:interceptors>
		<bean class="io.mycat.web.common.CommonIntercepter" />
	</mvc:interceptors>

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="" />
		<property name="suffix" value="" />
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:spring/i18n/messages" />
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>


	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="password" value="${jdbc.user}" />
		<property name="username" value="${jdbc.pwd}" />
		<property name="url" value="${jdbc.url}" />
	</bean>

	<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
		<jdbc:script location="classpath:spring/proxy_schema.sql" />
	</jdbc:initialize-database>

	<!-- need wait jdbc:initialize-database executed -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" depends-on="org.springframework.jdbc.datasource.init.DataSourceInitializer#0">
		<property name="dataSource" ref="dataSource" />
		 <property name="mapperLocations" value="classpath:spring/mybaits/**/*.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="io.mycat.web.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

</beans>
2018-04-05 13:43:17.821  WARN [main] (io.mycat.buffer.ByteBufferArena.expand(ByteBufferArena.java:126)) - Current Buffer Size is not enough! Expanding Byte buffer!
2018-04-05 13:43:17.828  WARN [main] (io.mycat.buffer.ByteBufferArena.expand(ByteBufferArena.java:126)) - Current Buffer Size is not enough! Expanding Byte buffer!
2018-04-05 13:43:17.844  WARN [main] (io.mycat.buffer.ByteBufferArena.expand(ByteBufferArena.java:126)) - Current Buffer Size is not enough! Expanding Byte buffer!
2018-04-05 13:43:17.848  WARN [main] (io.mycat.buffer.ByteBufferArena.expand(ByteBufferArena.java:126)) - Current Buffer Size is not enough! Expanding Byte buffer!
2018-04-05 13:43:17.854  WARN [main] (io.mycat.buffer.ByteBufferArena.expand(ByteBufferArena.java:126)) - Current Buffer Size is not enough! Expanding Byte buffer!
2018-04-05 13:43:17.857  WARN [main] (io.mycat.buffer.ByteBufferArena.expand(ByteBufferArena.java:126)) - Current Buffer Size is not enough! Expanding Byte buffer!
2018-04-05 13:43:19.067  INFO [main] (io.mycat.cache.DefaultLayedCachePool.createChildCache(DefaultLayedCachePool.java:80)) - create child Cache: default for layered cache defaultLayedPool, size 1000, expire seconds 1
2018-04-05 13:43:20.461  INFO [main] (io.mycat.cache.DefaultLayedCachePool.createChildCache(DefaultLayedCachePool.java:80)) - create child Cache: company for layered cache defaultLayedPool, size 1000, expire seconds 1
2018-04-05 13:43:20.464  INFO [main] (io.mycat.cache.DefaultLayedCachePool.createChildCache(DefaultLayedCachePool.java:80)) - create child Cache: goods for layered cache defaultLayedPool, size 1000, expire seconds 1
2018-04-05 13:43:26.899  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost2 is :4
2018-04-05 13:43:26.899  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost1 is :1
2018-04-05 13:43:26.930  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost2 is :4
2018-04-05 13:43:26.930  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost1 is :1
2018-04-05 13:43:26.958  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost2 is :4
2018-04-05 13:43:26.959  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost1 is :1
2018-04-05 13:43:26.982  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost2 is :4
2018-04-05 13:43:26.982  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost1 is :1
2018-04-05 13:43:27.016  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost1 is :1
2018-04-05 13:43:27.071  INFO [main] (io.mycat.memory.MyCatMemory.<init>(MyCatMemory.java:168)) - mycat.memory.offHeap.size: 1259MB
2018-04-05 13:43:27.077  INFO [main] (io.mycat.memory.MyCatMemory.<init>(MyCatMemory.java:168)) - mycat.memory.offHeap.size: 1259MB
2018-04-05 13:43:27.154  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost1 is :1
2018-04-05 13:43:27.167  INFO [main] (io.mycat.cache.CacheService.createLayeredPool(CacheService.java:125)) - create layer cache pool TableID2DataNodeCache of type encache ,default cache size 10000 ,default expire seconds18000
2018-04-05 13:43:27.169  INFO [main] (io.mycat.cache.DefaultLayedCachePool.createChildCache(DefaultLayedCachePool.java:80)) - create child Cache: TESTDB_ORDERS for layered cache TableID2DataNodeCache, size 50000, expire seconds 18000
2018-04-05 13:43:28.820  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.842  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.847  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.906  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.914  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.921  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.929  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.935  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.937  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.940  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.957  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.960  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.969  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.972  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.979  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.984  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:28.986  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:219)) - Sharding column can't be updated hotnews->ID
2018-04-05 13:43:29.645  INFO [main] (io.mycat.cache.CacheService.createLayeredPool(CacheService.java:125)) - create layer cache pool TableID2DataNodeCache of type encache ,default cache size 10000 ,default expire seconds18000
2018-04-05 13:43:29.646  INFO [main] (io.mycat.cache.DefaultLayedCachePool.createChildCache(DefaultLayedCachePool.java:80)) - create child Cache: TESTDB_ORDERS for layered cache TableID2DataNodeCache, size 50000, expire seconds 18000
2018-04-05 13:43:29.708  INFO [main] (io.mycat.cache.CacheService.createLayeredPool(CacheService.java:125)) - create layer cache pool TableID2DataNodeCache of type encache ,default cache size 10000 ,default expire seconds18000
2018-04-05 13:43:29.708  INFO [main] (io.mycat.cache.DefaultLayedCachePool.createChildCache(DefaultLayedCachePool.java:80)) - create child Cache: TESTDB_ORDERS for layered cache TableID2DataNodeCache, size 50000, expire seconds 18000
2018-04-05 13:43:29.787  INFO [main] (io.mycat.cache.CacheService.createLayeredPool(CacheService.java:125)) - create layer cache pool TableID2DataNodeCache of type encache ,default cache size 10000 ,default expire seconds18000
2018-04-05 13:43:29.787  INFO [main] (io.mycat.cache.DefaultLayedCachePool.createChildCache(DefaultLayedCachePool.java:80)) - create child Cache: TESTDB_ORDERS for layered cache TableID2DataNodeCache, size 50000, expire seconds 18000
2018-04-05 13:43:31.088  WARN [main] (io.mycat.route.parser.druid.impl.DruidInsertParser.parserSingleInsert(DruidInsertParser.java:186)) - bad insert sql (sharding column:OFFER_ID not provided,INSERT INTO offer_detail (gmt)
VALUES (now())
2018-04-05 13:43:31.140  WARN [main] (io.mycat.route.parser.druid.impl.DruidInsertParser.parserSingleInsert(DruidInsertParser.java:199)) - Sharding column can't be updated: EMPLOYEE -> SHARDING_ID
2018-04-05 13:43:31.155  WARN [main] (io.mycat.route.util.RouterUtil.ruleByJoinValueCalculate(RouterUtil.java:906)) - joinKey can't have multi Value
2018-04-05 13:43:31.180  WARN [main] (io.mycat.route.parser.druid.impl.DruidUpdateParser.confirmShardColumnNotUpdated(DruidUpdateParser.java:226)) - Parent relevant column can't be updated ORDERS->CUSTOMER_ID
2018-04-05 13:43:31.224  WARN [main] (io.mycat.route.parser.druid.impl.DruidInsertParser.parserChildTable(DruidInsertParser.java:126)) - ChildTable multi insert not provided
2018-04-05 13:43:31.224  WARN [main] (io.mycat.route.parser.druid.impl.DruidInsertParser.parserBatchInsert(DruidInsertParser.java:286)) - TODO:insert into .... select .... not supported!
2018-04-05 13:43:35.548  INFO [main] (io.mycat.cache.CacheService.createLayeredPool(CacheService.java:125)) - create layer cache pool TableID2DataNodeCache of type encache ,default cache size 10000 ,default expire seconds18000
2018-04-05 13:43:35.548  INFO [main] (io.mycat.cache.DefaultLayedCachePool.createChildCache(DefaultLayedCachePool.java:80)) - create child Cache: TESTDB_ORDERS for layered cache TableID2DataNodeCache, size 50000, expire seconds 18000
2018-04-05 13:43:35.579  INFO [main] (io.mycat.cache.CacheService.createLayeredPool(CacheService.java:125)) - create layer cache pool TableID2DataNodeCache of type encache ,default cache size 10000 ,default expire seconds18000
2018-04-05 13:43:35.579  INFO [main] (io.mycat.cache.DefaultLayedCachePool.createChildCache(DefaultLayedCachePool.java:80)) - create child Cache: TESTDB_ORDERS for layered cache TableID2DataNodeCache, size 50000, expire seconds 18000
2018-04-05 13:43:35.644  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost1 is :1
2018-04-05 13:44:04.446  WARN [main] (org.apache.curator.utils.ZKPaths$CreateModeHolder.<clinit>(ZKPaths.java:76)) - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2018-04-05 13:44:49.566  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost1 is :1
2018-04-05 13:45:35.676  WARN [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:59772] (org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:357)) - caught end of stream exception
org.apache.zookeeper.server.ServerCnxn$EndOfStreamException: Unable to read additional data from client sessionid 0x16294560aa60000, likely client has closed socket
	at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:228) ~[zookeeper-3.4.6.jar:3.4.6-1569965]
	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:208) ~[zookeeper-3.4.6.jar:3.4.6-1569965]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]
2018-04-05 13:45:35.686  WARN [Curator-LeaderSelector-17] (io.mycat.route.sequence.handler.DistributedSequenceHandler.takeLeadership(DistributedSequenceHandler.java:274)) - Caught exception while handling zk!
java.lang.IllegalStateException: Client is not started
	at com.google.common.base.Preconditions.checkState(Preconditions.java:174) ~[guava-19.0.jar:?]
	at org.apache.curator.CuratorZookeeperClient.getZooKeeper(CuratorZookeeperClient.java:114) ~[curator-client-2.11.0.jar:?]
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getZooKeeper(CuratorFrameworkImpl.java:489) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:250) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:244) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:108) ~[curator-client-2.11.0.jar:?]
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:240) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:225) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:35) ~[curator-framework-2.11.0.jar:?]
	at io.mycat.route.sequence.handler.DistributedSequenceHandler.takeLeadership(DistributedSequenceHandler.java:259) ~[classes/:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector$WrappedListener.takeLeadership(LeaderSelector.java:534) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector.doWork(LeaderSelector.java:399) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector.doWorkLoop(LeaderSelector.java:441) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector.access$100(LeaderSelector.java:64) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector$2.call(LeaderSelector.java:245) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector$2.call(LeaderSelector.java:239) ~[curator-recipes-2.11.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_152]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_152]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_152]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]
2018-04-05 13:45:35.711  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost1 is :1
2018-04-05 13:45:41.605  WARN [pool-54-thread-1] (io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:187)) - Caught exception while handling zk!
java.lang.IllegalStateException: instance must be started before calling this method
	at com.google.common.base.Preconditions.checkState(Preconditions.java:174) ~[guava-19.0.jar:?]
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getChildren(CuratorFrameworkImpl.java:391) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getSortedChildren(LockInternals.java:151) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getParticipantNodes(LockInternals.java:133) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.InterProcessMutex.getParticipantNodes(InterProcessMutex.java:170) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector.getLeader(LeaderSelector.java:338) ~[curator-recipes-2.11.0.jar:?]
	at io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:170) ~[classes/:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_152]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) ~[?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_152]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]
2018-04-05 13:45:41.662  WARN [pool-58-thread-1] (io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:187)) - Caught exception while handling zk!
java.lang.IllegalStateException: instance must be started before calling this method
	at com.google.common.base.Preconditions.checkState(Preconditions.java:174) ~[guava-19.0.jar:?]
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getChildren(CuratorFrameworkImpl.java:391) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getSortedChildren(LockInternals.java:151) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getParticipantNodes(LockInternals.java:133) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.InterProcessMutex.getParticipantNodes(InterProcessMutex.java:170) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector.getLeader(LeaderSelector.java:338) ~[curator-recipes-2.11.0.jar:?]
	at io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:170) ~[classes/:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_152]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) ~[?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_152]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]
2018-04-05 13:45:41.762  INFO [main] (io.mycat.backend.datasource.PhysicalDBPool.<init>(PhysicalDBPool.java:101)) - total resouces of dataHost localhost1 is :1
2018-04-05 13:45:51.604  WARN [pool-54-thread-1] (io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:187)) - Caught exception while handling zk!
java.lang.IllegalStateException: instance must be started before calling this method
	at com.google.common.base.Preconditions.checkState(Preconditions.java:174) ~[guava-19.0.jar:?]
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getChildren(CuratorFrameworkImpl.java:391) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getSortedChildren(LockInternals.java:151) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getParticipantNodes(LockInternals.java:133) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.InterProcessMutex.getParticipantNodes(InterProcessMutex.java:170) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector.getLeader(LeaderSelector.java:338) ~[curator-recipes-2.11.0.jar:?]
	at io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:170) ~[classes/:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_152]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) ~[?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_152]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]
2018-04-05 13:45:51.662  WARN [pool-58-thread-1] (io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:187)) - Caught exception while handling zk!
java.lang.IllegalStateException: instance must be started before calling this method
	at com.google.common.base.Preconditions.checkState(Preconditions.java:174) ~[guava-19.0.jar:?]
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getChildren(CuratorFrameworkImpl.java:391) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getSortedChildren(LockInternals.java:151) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getParticipantNodes(LockInternals.java:133) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.InterProcessMutex.getParticipantNodes(InterProcessMutex.java:170) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector.getLeader(LeaderSelector.java:338) ~[curator-recipes-2.11.0.jar:?]
	at io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:170) ~[classes/:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_152]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) ~[?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_152]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]
2018-04-05 13:46:01.605  WARN [pool-54-thread-1] (io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:187)) - Caught exception while handling zk!
java.lang.IllegalStateException: instance must be started before calling this method
	at com.google.common.base.Preconditions.checkState(Preconditions.java:174) ~[guava-19.0.jar:?]
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getChildren(CuratorFrameworkImpl.java:391) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getSortedChildren(LockInternals.java:151) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getParticipantNodes(LockInternals.java:133) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.InterProcessMutex.getParticipantNodes(InterProcessMutex.java:170) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector.getLeader(LeaderSelector.java:338) ~[curator-recipes-2.11.0.jar:?]
	at io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:170) ~[classes/:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_152]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) ~[?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_152]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]
2018-04-05 13:46:01.662  WARN [pool-58-thread-1] (io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:187)) - Caught exception while handling zk!
java.lang.IllegalStateException: instance must be started before calling this method
	at com.google.common.base.Preconditions.checkState(Preconditions.java:174) ~[guava-19.0.jar:?]
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getChildren(CuratorFrameworkImpl.java:391) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getSortedChildren(LockInternals.java:151) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getParticipantNodes(LockInternals.java:133) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.InterProcessMutex.getParticipantNodes(InterProcessMutex.java:170) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector.getLeader(LeaderSelector.java:338) ~[curator-recipes-2.11.0.jar:?]
	at io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:170) ~[classes/:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_152]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) ~[?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_152]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]
2018-04-05 13:46:11.604  WARN [pool-54-thread-1] (io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:187)) - Caught exception while handling zk!
java.lang.IllegalStateException: instance must be started before calling this method
	at com.google.common.base.Preconditions.checkState(Preconditions.java:174) ~[guava-19.0.jar:?]
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getChildren(CuratorFrameworkImpl.java:391) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getSortedChildren(LockInternals.java:151) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getParticipantNodes(LockInternals.java:133) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.InterProcessMutex.getParticipantNodes(InterProcessMutex.java:170) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector.getLeader(LeaderSelector.java:338) ~[curator-recipes-2.11.0.jar:?]
	at io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:170) ~[classes/:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_152]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) ~[?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_152]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]
2018-04-05 13:46:11.663  WARN [pool-58-thread-1] (io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:187)) - Caught exception while handling zk!
java.lang.IllegalStateException: instance must be started before calling this method
	at com.google.common.base.Preconditions.checkState(Preconditions.java:174) ~[guava-19.0.jar:?]
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getChildren(CuratorFrameworkImpl.java:391) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getSortedChildren(LockInternals.java:151) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getParticipantNodes(LockInternals.java:133) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.InterProcessMutex.getParticipantNodes(InterProcessMutex.java:170) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector.getLeader(LeaderSelector.java:338) ~[curator-recipes-2.11.0.jar:?]
	at io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:170) ~[classes/:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_152]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) ~[?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_152]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]
2018-04-05 13:46:21.605  WARN [pool-54-thread-1] (io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:187)) - Caught exception while handling zk!
java.lang.IllegalStateException: instance must be started before calling this method
	at com.google.common.base.Preconditions.checkState(Preconditions.java:174) ~[guava-19.0.jar:?]
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getChildren(CuratorFrameworkImpl.java:391) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getSortedChildren(LockInternals.java:151) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getParticipantNodes(LockInternals.java:133) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.InterProcessMutex.getParticipantNodes(InterProcessMutex.java:170) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector.getLeader(LeaderSelector.java:338) ~[curator-recipes-2.11.0.jar:?]
	at io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:170) ~[classes/:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_152]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) ~[?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_152]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]
2018-04-05 13:46:21.661  WARN [pool-58-thread-1] (io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:187)) - Caught exception while handling zk!
java.lang.IllegalStateException: instance must be started before calling this method
	at com.google.common.base.Preconditions.checkState(Preconditions.java:174) ~[guava-19.0.jar:?]
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.getChildren(CuratorFrameworkImpl.java:391) ~[curator-framework-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getSortedChildren(LockInternals.java:151) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.LockInternals.getParticipantNodes(LockInternals.java:133) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.locks.InterProcessMutex.getParticipantNodes(InterProcessMutex.java:170) ~[curator-recipes-2.11.0.jar:?]
	at org.apache.curator.framework.recipes.leader.LeaderSelector.getLeader(LeaderSelector.java:338) ~[curator-recipes-2.11.0.jar:?]
	at io.mycat.route.sequence.handler.DistributedSequenceHandler$1.run(DistributedSequenceHandler.java:170) ~[classes/:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_152]
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_152]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) ~[?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_152]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_152]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_152]
